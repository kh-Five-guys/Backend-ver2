<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.finalproject.mapper.UserMapper">
    <!-- UserDTO에 해당하는 resultMap -->
    <resultMap type="com.finalproject.dto.UserDTO" id="user">
        <id column="USER_ID" property="userId"/>
        <result column="USER_EMAIL" property="userEmail"/>
        <result column="USER_PASSWD" property="userPasswd"/>
        <result column="USER_NICK" property="userNick"/>
        <result column="USER_ADDRESS" property="userAddress"/>
        <result column="LATITUDE" property="latitude"/>
        <result column="LONGITUDE" property="longitude"/>
        <result column="RANK_NO" property="rankNo"/>
        		<result column="USER_PRO_IMG" property="userProImg"
			jdbcType="BLOB" />
    </resultMap>
    
    
    <!-- 로그인 -->
    <select id="login" parameterType="map" resultMap="user">
        select * from
        users
        where user_id like #{id} and
        user_passwd like STANDARD_HASH(#{pass},'SHA512')
    </select>
    
    
    
    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="com.finalproject.dto.UserDTO">
        INSERT INTO users (
            USER_ID, USER_EMAIL, USER_PASSWD, USER_NICK,
            USER_ADDRESS, USER_PRO_IMG, LATITUDE, LONGITUDE
        )
        VALUES (
            #{userId}, #{userEmail}, STANDARD_HASH(#{userPasswd}, 'SHA512'),
            #{userNick}, #{userAddress}, #{userProImg}, #{latitude, jdbcType=NUMERIC}, #{longitude, jdbcType=NUMERIC}
        )
    </insert>

	<!-- 프로필 업데이트 -->
	<update id="updateUser" parameterType="com.finalproject.dto.UserDTO">
        UPDATE users
        SET
            user_nick = #{userNick},
            user_passwd = STANDARD_HASH(#{userPasswd}, 'SHA512'),
            user_address = #{userAddress},
            user_pro_img = #{userProImg},
            latitude = #{latitude, jdbcType=NUMERIC},
            longitude = #{longitude, jdbcType=NUMERIC}
        WHERE user_id = #{userId}
    </update>

	<select id="getAllUsers" resultMap="user">
		SELECT * FROM users
	</select>
	
	<delete id="deleteUser" parameterType="string">
        DELETE FROM Users WHERE user_Id=#{userId}
    </delete>

    <update id="updateUserRank" parameterType="map">
        UPDATE Users SET rank_no=#{rankNo} WHERE user_Id=#{userId}
    </update>
    
    <select id="findUserByEmail" resultMap="user" parameterType="string">
    	SELECT * FROM Users WHERE USER_EMAIL = #{email}
	</select>

	 <!-- 아이디와 이메일로 사용자 찾기 -->
    <select id="findUserByIdAndEmail" resultMap="user" parameterType="map">
        SELECT * FROM users WHERE user_id = #{userId} AND user_email = #{email}
    </select>

    <!-- 임시 비밀번호 업데이트 -->
    <update id="updateUserPassword" parameterType="map">
        UPDATE users SET user_passwd = STANDARD_HASH(#{tempPassword}, 'SHA512') WHERE user_id = #{userId}
    </update>
    
    
    
    <!-- 장원님 추가 -->
    <!-- 사용자 ID로 조회 -->
    <select id="getUserById" parameterType="String" resultType="com.finalproject.dto.UserDTO">
        SELECT USER_ID, USER_EMAIL, USER_PASSWD, USER_NICK, USER_PRO_IMG, USER_ADDRESS, LATITUDE, LONGITUDE, RANK_NO
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>

    

   
    
</mapper>